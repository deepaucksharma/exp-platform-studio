name: Service CI - Python

# Template CI workflow for Python services
# Copy this file to ci-<service-name>.yml and adjust the working-directory

on:
  push:
    branches: [ main ]
    paths:
      - 'generated_implementation/<SERVICE_PATH>/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'generated_implementation/<SERVICE_PATH>/**'
    
jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: generated_implementation/<SERVICE_PATH>
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: generated_implementation/<SERVICE_PATH>/requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f pyproject.toml ]; then pip install -e .; fi
          pip install pytest pytest-cov pylint
      - name: Lint
        run: pylint --exit-zero $(find . -name "*.py" | grep -v "test_")
      - name: Test
        run: pytest -xvs --cov=./ --cov-report=xml
        
  build:
    runs-on: ubuntu-latest
    needs: test
    defaults:
      run:
        working-directory: generated_implementation/<SERVICE_PATH>
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: generated_implementation/<SERVICE_PATH>/requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f pyproject.toml ]; then pip install -e .; fi
      - name: Build
        run: |
          if [ -f pyproject.toml ]; then
            pip install build
            python -m build
          fi
